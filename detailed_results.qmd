---
title: "Results"
author: "Juan Fonseca"
format: html
---

This section allows you to explore the overall trend for multiple areas simultaneously.
Average trends have been calculated for practices with all records within the main built-up 
area.

## Results by Built-up Areas with CAZ

```{r}
#| echo: false
#| warning: false
#| message: false

library(tidyverse)

caz_data <- read_csv(
  "CAZ_summary.csv",
  col_types = cols(
    date = col_date(format = ""),
    month = col_double(),
    numerator = col_double(),
    denominator = col_double(),
    calc_value = col_double(),
    name = col_character(),
    type = col_character()
  )
)

caz_lst <- read_csv("CAZ_list.csv",
                    col_types = cols_only(Area = col_character(),
                                          Type = col_character()))

types_list <- caz_lst$Type |> unique()

caz_trends <- caz_data |>
  nest(data = date:calc_value) |> 
  mutate(model = map(.x = data, \(.x) lm(calc_value~month,data = .x)),
         model_postcovid = map(.x = data, \(.x) lm(calc_value~month,data = .x[.x$month>28,])),
         trend = map_dbl(model, \(.x) coef(.x)[2]*100),
         trend_postcovid = map_dbl(model_postcovid, \(.x) coef(.x)[2]*100)
         ) |> 
  select(-data,-model,-model_postcovid) |> 
  mutate(across(trend:trend_postcovid,\(x) round(x,3)))
  

ojs_define(cazdata=caz_data)
ojs_define(caztypes=types_list)
```



```{ojs}
//| echo: false
viewof caztype = Inputs.select(caztypes, {value: "CAZ D", label: "Type"})
```

```{ojs}
//| echo: false
cazfiltered = transpose(cazdata).filter(function(record) {
return caztype.includes(record.type) ;
})

```

```{ojs}
//| echo: false
Plot.plot({
  y: {domain: [0,70],
    grid: true,
    label: "SABA ratio(%)",
    transform: (f) => (f*100)
  },
  x: {
  transform: (x) => d3.timeParse("%Y-%m-%d")(x),
  interval: "month"
  },
  color: {legend: true},
  marks: [
    Plot.ruleY([0]),
    Plot.lineY(cazfiltered,
    {x: "date",
    y: "calc_value",
    stroke: "name",
    marker: "dot",
    strokeOpacity: 0.3}),
    Plot.linearRegressionY(cazfiltered,
    {x: "date",
    y: "calc_value",
    stroke: "name"})
    ]
})
```


Linear trends (Avg % Change per month) 

```{r}
#| echo: false
library(DT)
datatable(caz_trends)
```

## Trends in each NHS region


```{r}
#| echo: false
#| warning: false
#| message: false

rdata <- readr::read_csv("all_ccg_summarised.csv",
                         col_types = readr::cols(
  date = readr::col_date(format = ""),
  month = readr::col_double(),
  numerator = readr::col_double(),
  denominator = readr::col_double(),
  calc_value = readr::col_double(),
  org_code = readr::col_character(),
  name = readr::col_character()
))

lstNames <- rdata |> dplyr::arrange(name) |> dplyr::pull(name) |> unique()

ojs_define(lstNames = lstNames)
ojs_define(mydata = rdata)
```


Select the start month to calculate the linear trend

```{ojs}
//| echo: false
viewof month_min = Inputs.range(
  [0, 60],
  {value: 28, step: 1, label: "Start month:"}
)
```

Select the NHS regions of interest (max 6):

```{ojs}
//| echo: false
viewof names = Inputs.select(lstNames, {multiple: 6, label: "NHS Regions",value: ["NHS BRADFORD DISTRICT AND CRAVEN","NHS LIVERPOOL"]})
```

```{ojs}
//| echo: false
rfiltered = transpose(mydata).filter(function(record) {
return month_min < record.month && names.includes(record.name) ;
})
```


```{ojs}
//| echo: false
Plot.plot({
  y: {domain: [0,70],
    grid: true,
    label: "SABA ratio(%)",
    transform: (f) => (f*100)
  },
  x: {
  transform: (x) => d3.timeParse("%Y-%m-%d")(x),
  interval: "month"
  },
  color: {legend: true},
  marks: [
    Plot.ruleY([0]),
    Plot.lineY(transpose(mydata),
    {x: "date",
    y: "calc_value",
    stroke: "#aaa7ad",
    z: "name",
    strokeOpacity: 0.2}),
    Plot.lineY(rfiltered,
    {x: "date",
    y: "calc_value",
    stroke: "name",
    marker: "dot",
    strokeOpacity: 0.6}),
    Plot.linearRegressionY(rfiltered,
    {x: "date",
    y: "calc_value",
    stroke: "name"})
    ]
})   
```



